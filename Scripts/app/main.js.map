{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./app/Demo/Route1.ts","/./app/Demo/app-routing.module.ts","/./app/Demo/app.component.ts","/./app/Demo/app.module.ts","/./app/Main.Component.ts","/./app/Main.Module.ts","/./app/Main.Routing.ts","/./app/environments/environment.ts","/./app/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'R',\n    template: `alert('h1')`,\n})\nexport class Route1Component {\n    title = 'sdd';\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { Route1Component } from './Route1';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AppComponent\r\n    }\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatInput, MatFormField } from '@angular/material'\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: `<form class=\"example-form\">\r\n<div>\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"example-full-width\">\r\n    <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n  </mat-form-field>\r\n</div>\r\n</form>\r\n\r\n`,\r\n    styles:[`.example-form {\r\n  min-width: 150px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n}\r\n\r\n.example-full-width {\r\n  width: 100%;\r\n}`]\r\n\r\n  \r\n})\r\nexport class AppComponent {\r\n  title = 'DemoApp';\r\n}\r\n","\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Route1Component } from './Route1';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { MatInputModule, MatFormFieldModule } from '@angular/material';\n\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      Route1Component,      \n  ],\n  imports: [     \n      AppRoutingModule,\n      MatInputModule, MatFormFieldModule\n    ],\n    exports: [\n        MatInputModule, MatFormFieldModule\n    ],\n    providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\nimport { MatInput, MatFormField } from '@angular/material'\r\n\r\n@Component({\r\n    \r\n    selector: 'main-component',\r\n    template: \"./HomePage.html\"\r\n  \r\n\r\n})\r\nexport class MainComponent {\r\n    title = 'DemoApp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { MainComponent } from './Main.Component'\nimport { MainRoutingModule } from './Main.Routing';\nimport { AppModule } from './Demo/app.module';\n \n@NgModule({\n    declarations: [\n        MainComponent \n    ],\n    imports: [\n        BrowserModule, MainRoutingModule ,\n        BrowserAnimationsModule, NoopAnimationsModule, AppModule     \n    ],\n    exports: [\n        MainComponent\n    ],\n    providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n    bootstrap: [MainComponent]\n})\nexport class MainModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    //{\r\n    //    path: 'product',\r\n    //    loadChildren: \"app/app.module#AppModule\"\r\n    //},\r\n   \r\n    {\r\n        path: '',\r\n        redirectTo: '',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MainRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n//import { AppModule } from './app/app.module';\nimport { MainModule} from './Main.Module'\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(MainModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}